#textdomain wesnoth-colosseum-xp

# =============================================================================
#  Easy per-side variables
# =============================================================================

#define CS_SIDEVAR_INIT NAME VALUE
    {CS_FOR_EACH_PLAYER_SIDE tmp_side (
        {VARIABLE cs_sidevar_{NAME}[$tmp_side|].value {VALUE}}
    )}
#enddef

# No indentation so ${CS_SIDEVAR ... ...} works.

#define CS_SIDEVAR NAME SIDE
cs_sidevar_{NAME}[{SIDE}].value#enddef

#define CS_SIDEVAR_SET NAME SIDE VALUE
    {VARIABLE cs_sidevar_{NAME}[{SIDE}].value {VALUE}}
#enddef

#define CS_SIDEVAR_OP NAME SIDE OP VALUE
    {VARIABLE_OP cs_sidevar_{NAME}[{SIDE}].value {OP} {VALUE}}
#enddef

# =============================================================================
#  Side declaration
# =============================================================================

#define CS_ENEMIES_SIDE OPTIONS
    [side]
        side=1
        team_name=Enemies
        user_team_name=_"Enemies"

        controller=ai
        canrecruit=yes
        allow_player=no

        income=-2

        {OPTIONS}
    [/side]
#enddef

#define CS_PLAYER_SIDE NUMBER TEAM_NAME OPTIONS
    [side]
        side={NUMBER}
        team_name={TEAM_NAME}

        controller=human
        canrecruit=yes

        income=-2

        {OPTIONS}
    [/side]

    [event]
        name=colosseum count players
        {VARIABLE_OP cs_num_players add 1}
    [/event]
#enddef

#define CS_OTHER_SIDE NUMBER OPTIONS
    [side]
        side={NUMBER}

        {OPTIONS}
    [/side]
#enddef

# =============================================================================
#  Player side iteration
# =============================================================================

#define CS_FOR_EACH_PLAYER_SIDE TMP_SIDE CODE
    {VARIABLE {TMP_SIDE} 2}
    [while]
        [variable]
            name={TMP_SIDE}
            less_than_equal_to="$($cs_num_players + 1)"
        [/variable]
        [do]
            {CODE}
            {VARIABLE_OP {TMP_SIDE} add 1}
        [/do]
    [/while]
    {CLEAR_VARIABLE {TMP_SIDE}}
#enddef

# =============================================================================
#  Player side checking
# =============================================================================

#define CS_IS_PLAYER_SIDE VAR
    [variable]
        name={VAR}
        greater_than_equal_to=1
    [/variable]
    [variable]
        name={VAR}
        less_than_equal_to="$($cs_num_players + 1)"
    [/variable]
#enddef

# =============================================================================
#  Difficulty
# =============================================================================

#define CS_DIFFICULTY NAME GOLD DEDUCT SIDE_DEDUCT COLOR IMAGE
    [option]
        message=_"&{IMAGE}~SCALE(40,40)=<span foreground='#{COLOR}' size='large'>{NAME}</span>
<span size='small' foreground='#999999'>starting gold: <span color='#eecc66'>{GOLD}</span>, reward loss: per turn <span color='#ee6633'>-{DEDUCT}</span>, per side alive <span color='#ee6633'>-{SIDE_DEDUCT}</span></span>"

        [command]
            {VARIABLE cs_difficuly {NAME}}
            {VARIABLE cs_reward_deduction {DEDUCT}}
            {VARIABLE cs_side_reward_deduction {SIDE_DEDUCT}}

            {CS_FOR_EACH_PLAYER_SIDE tmp_side (
                [modify_side]
                    side=$tmp_side
                    gold={GOLD}
                [/modify_side]
            )}

            [sound]
                name=dragonstick.ogg
            [/sound]

            [print]
                text=_"Difficulty: {NAME}"
                size=40
                duration=400
                red,green,blue=255,50,00
            [/print]

            [fire_event]
                name=colosseum shop new turn
            [/fire_event]
        [/command]
    [/option]
#enddef

#define CS_DIFFICULTY_MENU OPTIONS
    [event]
        name=side 1 turn 1

        [message]
            speaker=narrator
            image=wesnoth-icon.png
            caption=_"Choose difficulty"

            {OPTIONS}
        [/message]
    [/event]
#enddef

# =============================================================================
#  Enemy boosting
# =============================================================================

#define CS_MAKE_ENEMIES_STRONGER DMG MV HP STR RES
    [store_unit]
        [filter]
            side=1
        [/filter]

        variable=tmp_units
        kill=no
    [/store_unit]

    {FOREACH tmp_units i}
        [object]
            side_for=1
            silent=yes
            name=_"Enemy boost"

            [filter]
                x,y=$tmp_units[$i].x,$tmp_units[$i].y
            [/filter]

            [effect]
                apply_to=attack
                increase_damage={DMG}
            [/effect]

            [effect]
                apply_to=movement
                increase={MV}
            [/effect]

            [effect]
                apply_to=hitpoints
                increase_total={HP}
            [/effect]

            [effect]
                apply_to=hitpoints
                increase={HP}
            [/effect]

            [effect]
                apply_to=attack
                increase_attacks={STR}
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    cold=-{RES}
                [/resistance]
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    fire=-{RES}
                [/resistance]
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    arcane=-{RES}
                [/resistance]
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    impact=-{RES}
                [/resistance]
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    pierce=-{RES}
                [/resistance]
            [/effect]

            [effect]
                apply_to=resistance
                replace=no
                [resistance]
                    blade=-{RES}
                [/resistance]
            [/effect]
        [/object]
    {NEXT i}

    {CLEAR_VARIABLE tmp_units}
#enddef

# =============================================================================
#  Teleporting side
# =============================================================================

#define CS_TELEPORT SIDE X Y
    [teleport]
        [filter]
            side={SIDE}
            canrecruit=yes
        [/filter]
        x={X}
        y={Y}
    [/teleport]
#enddef

# =============================================================================
#  Regrouping side
# =============================================================================

#define CS_REGROUP SIDE X Y
    [object]
        silent=yes

        [filter]
            side={SIDE}
            canrecruit=yes
        [/filter]

        [effect]
            apply_to=hitpoints
            heal_full=yes
        [/effect]

        [effect]
            apply_to=status
            remove=poisoned
        [/effect]

        [effect]
            apply_to=status
            remove=slowed
        [/effect]
    [/object]

    {CS_TELEPORT {SIDE} {X} {Y}}
#enddef

# =============================================================================
#  Events for easier coding of abilities and specials
#
#  colosseum attack,          - called for both attacker and defender with
#  colosseum attack_end         both as primary units
#
#  colosseum defender hits,   - called with defender as primary unit
#  colosseum defender misses
#
# =============================================================================

# uses x,y because unit.id is broken when launching scenario from command line
# (both spectator leader and my leader have same ID "Colosseum_Gladiators"),
# but launching from command line speeds up my work considerably

#define _CS_FIRE_AS_ATTACKER
    [primary_unit]
        x,y=$x1,$y1
    [/primary_unit]

    [secondary_unit]
        x,y=$x2,$y2
    [/secondary_unit]

    [insert_tag]
        name=primary_attack 
        variable=weapon
    [/insert_tag]

    [insert_tag]
        name=secondary_attack 
        variable=second_weapon
    [/insert_tag]
#enddef

#define _CS_FIRE_AS_DEFENDER
    [primary_unit]
        x,y=$x2,$y2
    [/primary_unit]

    [secondary_unit]
        x,y=$x1,$y1
    [/secondary_unit]

    [insert_tag]
        name=primary_attack 
        variable=second_weapon
    [/insert_tag]

    [insert_tag]
        name=secondary_attack 
        variable=weapon
    [/insert_tag]
#enddef

#define _CS_EASY_ABILITY_EVENTS
    [event]
        name=attack
        first_time_only=no

        [fire_event]
            name=colosseum attack
            {_CS_FIRE_AS_ATTACKER}
        [/fire_event]

        [fire_event]
            name=colosseum attack
            {_CS_FIRE_AS_DEFENDER}
        [/fire_event]
    [/event]

    [event]
        name=attack_end
        first_time_only=no

        [fire_event]
            name=colosseum attack_end
            {_CS_FIRE_AS_ATTACKER}
        [/fire_event]

        [fire_event]
            name=colosseum attack_end
            {_CS_FIRE_AS_DEFENDER}
        [/fire_event]
    [/event]

    [event]
        name=defender hits
        first_time_only=no
        
        [fire_event]
            name=colosseum defender hits
            {_CS_FIRE_AS_DEFENDER}
        [/fire_event]
    [/event]

    [event]
        name=defender misses
        first_time_only=no

        [fire_event]
            name=colosseum defender misses
            {_CS_FIRE_AS_DEFENDER}
        [/fire_event]
    [/event]
#enddef

# =============================================================================
#  Main macro
# =============================================================================

#define COLOSSEUM

    # =========================================================================
    #  Include other macros
    # =========================================================================

    {_CS_DEBUG_MENU}
    {_CS_EASY_ABILITY_EVENTS}

    # =========================================================================
    #  Prestart sequence
    # =========================================================================

    [event]
        name=prestart

        {VARIABLE cs_num_players 0}
        {VARIABLE cs_players_alive 0}
        {VARIABLE cs_difficulty 0}
        {VARIABLE cs_reward_deduction 0}
        {VARIABLE cs_start_reward 150}
        {VARIABLE cs_min_reward 50}
        {VARIABLE cs_reward 0}
        {VARIABLE cs_wave 1}

        # shop       - shopping time
        # battle     - battle
        # battle_end - all enemies were killed, but some players are still
        #              waiting for their turn
        {VARIABLE cs_state shop}

        [lua]
            code={~add-ons/Colosseum_XP/lua/image.lua}
        [/lua]

        [lua]
            code={~add-ons/Colosseum_XP/lua/shop.lua}
        [/lua]

        [lua]
            code={~add-ons/Colosseum_XP/lua/weapon.lua}
        [/lua]

        [fire_event]
            name=colosseum count players
        [/fire_event]

        [fire_event]
            name=colosseum sanity check
        [/fire_event]

        [fire_event]
            name=colosseum prestart
        [/fire_event]
    [/event]

    # =========================================================================
    #  Start sequence
    # =========================================================================

    [event]
        name=start

        {CS_FOR_EACH_PLAYER_SIDE tmp_side (
            [if]
                [have_unit]
                    side=$tmp_side
                    canrecruit=yes
                [/have_unit]
                [then]
                    {VARIABLE_OP cs_players_alive add 1}
                [/then]
            [/if]
        )}

        [fire_event]
            name=colosseum start
        [/fire_event]

        [fire_event]
            name=colosseum after start
        [/fire_event]
    [/event]

    # =========================================================================
    #  Sanity check
    # =========================================================================

    [event]
        name=colosseum sanity check

        # Check if income was modified for any side
        # -----------------------------------------

        {CS_FOR_EACH_PLAYER_SIDE tmp_side (
            [store_side]
                side=$tmp_side
                variable=tmp_income
            [/store_side]

            [if]
                [variable]
                    name=tmp_income.income
                    not_equals=0
                [/variable]

                [then]
                    [message]
                        message=_"Income of side $tmp_side was changed. Choose the default income."
                    [/message]

                    [endlevel]
                        result=defeat
                    [/endlevel]
                [/then]
            [/if]

            {CLEAR_VARIABLE tmp_income}
        )}
    [/event]

    # =========================================================================
    #  Shop-battle cycle
    # =========================================================================

    [event]
        name=new turn
        first_time_only=no

        [if]
            [variable]
                name=turn_number
                not_equals=1
            [/variable]

            [then]
                [switch]
                    variable=cs_state

                    [case]
                        value=shop

                        {VARIABLE cs_state battle}
                        {VARIABLE cs_battle_turn 1}

                        [fire_event]
                            name=colosseum battle new turn
                        [/fire_event]
                    [/case]

                    [case]
                        value=battle
                        
                        {VARIABLE_OP cs_battle_turn add 1}

                        [fire_event]
                            name=colosseum battle new turn
                        [/fire_event]
                    [/case]

                    [case]
                        value=battle_end

                        {VARIABLE cs_state shop}
                        {VARIABLE_OP cs_wave add 1}

                        [fire_event]
                            name=colosseum shop new turn
                        [/fire_event]
                    [/case]
                [/switch]
            [/then]
        [/if]
    [/event]

    [event]
        name=turn end
        first_time_only=no

        [switch]
            variable=cs_state

            [case]
                value=shop

                [fire_event]
                    name=colosseum shop turn end
                [/fire_event]
            [/case]

            [case]
                value=battle

                # Check if there are enemies left
                # -------------------------------

                [if]
                    [have_unit]
                        side=1
                        canrecruit=no
                    [/have_unit]

                    [then]
                        [fire_event]
                            name=colosseum battle turn end
                        [/fire_event]
                    [/then]

                    [else]
                        {VARIABLE cs_state battle_end}

                        [fire_event]
                            name=colosseum battle end turn end
                        [/fire_event]
                    [/else]
                [/if]
            [/case]

            [case]
                value=battle_end

                [fire_event]
                    name=colosseum battle end turn end
                [/fire_event]
            [/case]
        [/switch]
    [/event]
    
    [event]
        name=side turn
        first_time_only=no

        [if]
            {CS_IS_PLAYER_SIDE side_number}

            [then]
                [switch]
                    variable=cs_state
                
                    [case]
                        value=shop

                        [fire_event]
                            name=colosseum shop side turn
                        [/fire_event]
                    [/case]

                    [case]
                        value=battle

                        # Check if there are enemies left
                        # -------------------------------

                        [if]
                            [have_unit]
                                side=1
                                canrecruit=no
                            [/have_unit]

                            [then]
                                [fire_event]
                                    name=colosseum battle side turn
                                [/fire_event]
                            [/then]

                            [else]
                                {VARIABLE cs_state battle_end}

                                # Skip the rest of the turn for convenience

                                [end_turn]
                                [/end_turn]
                            [/else]
                        [/if]
                    [/case]

                    [case]
                        value=battle_end

                        [end_turn]
                        [/end_turn]
                    [/case]
                [/switch]
            [/then]
        [/if]
    [/event]

    # =========================================================================
    #  Handling player death
    # =========================================================================

    [event]
        name=die

        [filter]
            canrecruit=yes
        [/filter]

        [if]
            {CS_IS_PLAYER_SIDE unit.side}

            [not]
                [have_unit]
                    side=$unit.side
                    canrecruit=yes
                [/have_unit]
            [/not]

            [then]
                [fire_event]
                    name=colosseum player die
                [/fire_event]

                [modify_side]
                    side=$unit.side
                    gold=0
                [/modify_side]

                {VARIABLE_OP cs_players_alive add -1}
            [/then]
        [/if]
    [/event]

    # =========================================================================
    #  Reward management
    # =========================================================================

    [event]
        name=colosseum battle new turn
        first_time_only=no

        [if]
            [variable]
                name=cs_battle_turn
                equals=1
            [/variable]

            [then]
                {VARIABLE cs_reward $cs_start_reward}
            [/then]
    
            [else]
                [if]
                    [variable]
                        name=cs_reward
                        not_equals=$cs_min_reward
                    [/variable]
    
                    [then]
                        {VARIABLE_OP cs_reward sub "$($cs_reward_deduction + $cs_side_reward_deduction * $cs_players_alive)"}

                        [if]
                            [variable]
                                name=cs_reward
                                less_than=$cs_min_reward
                            [/variable]
                            [then]
                                {VARIABLE cs_reward $cs_min_reward}
                            [/then]
                        [/if]

                        {CS_SHOP_SET_LABEL _"Reward: $cs_reward"}
                    [/then]
                [/if]
            [/else]
        [/if]

        {CS_SHOP_SET_LABEL _"Reward: $cs_reward"}
    [/event]

    [event]
        name=colosseum start
        
        {CS_SHOP_SET_LABEL _"Upgrade"}
    [/event]

    [event]
        name=colosseum shop new turn
        first_time_only=no

        {CS_FOR_EACH_PLAYER_SIDE tmp_side (
            [if]
                [have_unit]
                    side=$tmp_side
                    canrecruit=yes
                [/have_unit]

                [then]
                    [gold]
                        side=$tmp_side
                        amount=$cs_reward
                    [/gold]
                [/then]
            [/if]
        )}

        {CS_SHOP_SET_LABEL _"Upgrade"}
    [/event]
#enddef
